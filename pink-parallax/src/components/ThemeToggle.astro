---
// This Astro component provides a theme toggle button (light/dark mode).
// It uses inline JavaScript to manage theme state in localStorage and apply it to the document's data-theme attribute.
---

<button id="theme-toggle" aria-label="Toggle dark mode">
  <div class="slider-thumb"></div>
  <div class="theme-icons-container">
    <div id="sun-wrapper" class="theme-icon-wrapper">
      <svg
        id="sun-icon"
        class="theme-icon"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
    </div>
    <div id="moon-wrapper" class="theme-icon-wrapper">
      <svg
        id="moon-icon"
        class="theme-icon"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
    </div>
  </div>
</button>

<script is:inline>
  // Client-side script to handle theme toggling and persistence.
  const themeToggle = document.getElementById("theme-toggle");
  const html = document.documentElement;
  const sliderThumb = document.querySelector(".slider-thumb");
  const sunWrapper = document.getElementById("sun-wrapper");
  const moonWrapper = document.getElementById("moon-wrapper");

  // Function to set the theme and update icon visibility
  function setTheme(theme) {
    html.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);
    if (theme === "dark") {
      sliderThumb.style.transform = "translateX(100%)";
      sunWrapper.classList.remove("is-active");
      moonWrapper.classList.add("is-active");
    } else {
      sliderThumb.style.transform = "translateX(0)";
      sunWrapper.classList.add("is-active");
      moonWrapper.classList.remove("is-active");
    }
  }

  // Check for saved theme preference or system preference
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) {
    setTheme(savedTheme);
  } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    setTheme("dark");
  } else {
    setTheme("light");
  }

  // Toggle theme on button click
  themeToggle.addEventListener("click", () => {
    const currentTheme = html.getAttribute("data-theme");
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    setTheme(newTheme);
  });
</script>

<style>
  :root {
    --theme-toggle-width: 60px; /* Width of the entire toggle button */
    --theme-toggle-height: 32px; /* Height of the entire toggle button */
    --icon-size: 24px; /* Size of the SVG icons */
    --slider-bg-color: var(
      --color-bg-offset
    ); /* Background for the slider thumb */
    --icon-inactive-color: var(
      --color-text-muted
    ); /* Color for inactive icon */
    --icon-active-color: var(--color-primary); /* Green color for active icon */
  }

  #theme-toggle {
    position: relative;
    background: var(--color-bg-offset);
    cursor: pointer;
    width: var(--theme-toggle-width);
    height: var(--theme-toggle-height);
    display: flex;
    align-items: center;
    justify-content: space-between;
    border: 2px solid limegreen;
    border-radius: 9999px; /* Fully rounded border */
    overflow: hidden; /* Crucial for containing the slider thumb */
    padding: 0 5px;
    margin: auto; /* Add horizontal padding inside the toggle */
    transition:
      border-color 0.3s ease,
      background-color 0.3s ease;
  }

  #theme-toggle:hover {
    border-color: var(--color-primary);
  }

  #theme-toggle:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .slider-thumb {
    position: absolute;
    top: 0;
    left: 0;
    width: 50%; /* Half the width of the toggle for one icon */
    height: 100%;
    background-color: var(--slider-bg-color);
    border-radius: var(--border-radius-lg);
    transition: transform 0.3s ease;
    z-index: 0; /* Ensure it's behind the icons */
  }

  .theme-icons-container {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: space-around; /* Distribute icons evenly */
    z-index: 1; /* Ensure icons are above the slider thumb */
  }

  .theme-icon-wrapper {
    width: var(--icon-size);
    height: var(--icon-size);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.3s ease; /* Smooth color transition */
  }

  .theme-icon {
    width: var(--icon-size);
    height: var(--icon-size);
    stroke: var(--icon-inactive-color); /* Default inactive color */
    fill: none;
    transition: stroke 0.3s ease; /* Smooth stroke color transition */
  }

  /* Active states for slider and icon colors */
  html[data-theme="dark"] .slider-thumb {
    transform: translateX(100%); /* Slider moves to cover sun (left icon) */
  }

  html[data-theme="light"] .slider-thumb {
    transform: translateX(0); /* Slider moves to cover moon (right icon) */
  }

  .theme-icon-wrapper.is-active .theme-icon {
    stroke: var(--icon-active-color); /* Active icon turns green */
  }
</style>
